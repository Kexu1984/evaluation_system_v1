### Test Case
生成完device model后，需要再增加一个python层的测试程序，并命名为：<devicename>_test.py；
测试程序主要需要包含如下部分：
1. 测试device的创建是否成功
2. 测试device的基础寄存器读写功能是否通过
注意：关于寄存器的部分需要额外测试：
1）对于标明具有write clear属性的寄存器需要测试对应的寄存器写后再读的值是否清0
2）对于标明具有read clear属性的寄存器需要测试对应的寄存器在读过一次后第二次读操作得到的结果是否为0
3. 对于支持中断功能的模块，需要在测试过程中测试device处理完后，外部测试程序能否成功收到中断信号；
注意，这里的中断信号除了中断处理函数之外，还需要确认中断状态寄存器是否能够被成功置位；
4. 测试需要着重关注device本身的功能部分，例如：hsm模块中的加解密功能，crc模块中的计算结果是否符合预期；
注意：对于<device>/input/目录中描述到的模块功能，必须都要测试到；
5. 对于具有真实应用场景的功能，需要利用真实场景去进行结果对比，
例如：AES加密模块，在测试AES加密功能时，<device>_test.py还需要利用真实加解密库去同步计算，然后比较二者的结果去确认操作是否真实可靠；
6. 测试必须包含所有模式；
例如：DMA模块的测试除了包含mem2mem，还需要包含mem2peri, peri2mem，以及address fixed mode和address inc mode等所有场景
又例如：AES加密模块，测试加密时要测试到其支持的所有模式：ecb/cbc/cfb...
7. 测试必须包含边界条件测试；
例如：DMA模块搬运0字节数据的场景，AES模块加密输入数据为空的场景，AES加密模块目标地址为非法地址的场景等；
8. 对于具备错误状态寄存器的模块，还需要对模块的error injection接口进行测试，确认故障注入功能通过